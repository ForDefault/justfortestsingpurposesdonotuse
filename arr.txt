version: "3.9" 

networks:
  t2_proxy:
     external: true    

services:
    
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    security_opt:
      - no-new-privileges:true
    environment:
      - ${PUID}
      - ${PGID}
      - ${TZ}
    volumes:
      - ${APPDIR}/sonarr/config:/config
      - ${ARRGDRIVE}/shows:${SHOWS} 
#      - ${REALDRIVE}/shows:${REALD} #optional      
      - ${DOWNLOADS}:${DL} 
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.212       
    labels:
      - "traefik.enable=true"
     ## HTTP Routers
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr-rtr.tls=true"   
     ## Middlewares
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-oauth@file"       
     ## HTTP Services	  
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"               
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:8989
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s    
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    security_opt:
      - no-new-privileges:true	
    environment:
      - ${PUID}
      - ${PGID}
      - ${TZ}
    volumes:
      - ${APPDIR}/radarr/config:/config
      - ${ARRGDRIVE}/movies:${MOVIES} 
#      - ${REALDRIVE}/movies:${REALD} #optional      
      - ${DOWNLOADS}:${DL}
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.213         
    labels:
      - "traefik.enable=true"
     ## HTTP Routers
      - "traefik.http.routers.radarr-rtr.entrypoints=https"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr-rtr.tls=true"
     ## Middlewares
      - "traefik.http.routers.radarr-rtr.middlewares=chain-oauth@file"   
     ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"  	            
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:7878
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s   
  
    restart: unless-stopped
   
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    security_opt:
      - no-new-privileges:true
    environment:
      - ${PUID}
      - ${PGID}
      - ${TZ}
    volumes:
      - ${APPDIR}/bazarr/config:/config
      - ${ARRGDRIVE}/movies:${MOVIES} 
      - ${ARRGDRIVE}/shows:${SHOWS} 
#      - ${REALDRIVE}:${REALD} #optional     
    networks:  
      t2_proxy:
        ipv4_address: 192.168.90.214
    labels:
      - "traefik.enable=true"
     ## HTTP Routers
      - "traefik.http.routers.bazarr-rtr.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.${DOMAIN}`)"
      - "traefik.http.routers.bazarr-rtr.tls=true"
     ## Middlewares
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-oauth@file"
     ## HTTP Services
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"  	  
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:6767
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s   
    restart: unless-stopped
    
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    security_opt:
      - no-new-privileges:true	
    volumes:
      - ${APPDIR}/overseerr/config:/app/config     
    environment:
      - ${PUID}
      - ${PGID}
      - ${TZ}
      - LOG_LEVEL=error      
    networks:  
      t2_proxy:
        ipv4_address: 192.168.90.215  
    labels:
      - "traefik.enable=true"
     ## HTTP Routers
      - "traefik.http.routers.overseerr-rtr.entrypoints=https"
      - "traefik.http.routers.overseerr-rtr.rule=Host(`overseerr.${DOMAIN}`,`requests.${DOMAIN}`)"
      - "traefik.http.routers.overseerr-rtr.tls=true"
     ## Middlewares
     # - "traefik.http.routers.overseerr-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.overseerr-rtr.middlewares=chain-no-auth@file"
     ## HTTP Services
      - "traefik.http.routers.overseerr-rtr.service=overseerr-svc"
      - "traefik.http.services.overseerr-svc.loadbalancer.server.port=5055"      
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055 || exit 1
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s
    restart: unless-stopped    


  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    security_opt:
      - no-new-privileges:true	
    environment:
      - ${PUID}
      - ${PGID}
      - ${TZ}
#    network_mode: container:wireguard  
    networks:  
      t2_proxy:
        ipv4_address: 192.168.90.216      
    volumes:
      - ${APPDIR}/prowlarr/config:/config
    labels:
      - "traefik.enable=true"
     ## HTTP Routers
      - "traefik.http.routers.prowlarr-rtr.entrypoints=https"
      - "traefik.http.routers.prowlarr-rtr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.routers.prowlarr-rtr.tls=true"  
     ## Middlewares
      - "traefik.http.routers.prowlarr-rtr.middlewares=chain-oauth@file"  
     ## HTTP Services             
      - "traefik.http.routers.prowlarr-rtr.service=prowlarr-svc"
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696"      
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:9696
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s         
    restart: unless-stopped    
    

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    security_opt:
      - no-new-privileges:true
    environment:
      - ${TZ}   
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
#    network_mode: container:wireguard 
    networks:  
      t2_proxy:
        ipv4_address: 192.168.90.217           
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8191 || exit 1
      interval: 1m00s
      timeout: 15s
      retries: 3
      start_period: 1m00s
    restart: unless-stopped  
